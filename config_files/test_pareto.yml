experiment:
  dataset: movielens_1m
  data_config:
    strategy: dataset
#    root_folder: ../data/{0}/splitting
    dataset_path: ../data/{0}/dataset.tsv
#    train_path: /home/sisinflab/PycharmProjects/elliot/data/movielens_1m/splitting/0/0/train.tsv
#    validation_path: /home/sisinflab/PycharmProjects/elliot/data/movielens_1m/splitting/0/0/val.tsv
#    test_path: /home/sisinflab/PycharmProjects/elliot/data/movielens_1m/splitting/0/test.tsv
  prefiltering:
#    - strategy: global_threshold
#      threshold: 3
    - strategy: iterative_k_core
      core: 5
  binarize: True
  splitting:
    save_on_disk: True
    save_folder: ../splitting/{0}
    test_splitting:
      strategy: random_subsampling
      test_ratio: 0.2
    validation_splitting:
      strategy: random_subsampling
      test_ratio: 0.1
#  negative_sampling:
#    strategy: fixed
#    files: ["/home/cheggynho/PycharmProjects/elliot/data/ncf_pinterest/pinterest-20.test.negative"]
  top_k: 10
  evaluation:
    cutoffs: 10
    simple_metrics: [nDCG, nDCGRendle2020, HR, LAUC, F1, MAP, MAR, MRR, ACLT, APLT, ARP, PopREO, PopRSP, ItemCoverage, UserCoverage, NumRetrived, UserCoverage, Gini, SEntropy, EFD, EPC]
    paired_ttest: True
    wilcoxon_test: True
  print_results_as_triplets: True
#  gpu: -1
  external_models_path: ../external/models/__init__.py
  models:
    ItemKNN:
      meta:
        verbose: True
        save_recs: True
        validation_metric: nDCG@10
      neighbors: [ 10, 20, 30, 50, 100, 150, 200, 250 ] # [ 10, 50, 100, 200 ]
      similarity: [ cosine, dot, euclidean, manhattan ] # [ cosine, dot ]
      shrink: 10 # [ 10, 100, 1000 ]
      implementation: standard
    EASER:
      meta:
        verbose: True
        save_recs: True
        validation_metric: nDCG@10
      l2_norm: [ 100, 200, 300, 400, 500, 600, 700, 800, 900, 1100, 1200, 1300, 1400, 1600, 1700, 1800, 2000, 2500, 3000 ] #[ 100, 200, 300, 400, 500, 1000, 1500, 2000, 2500, 3000 ]
    RP3beta:
      meta:
        verbose: True
        save_recs: True
        validation_metric: nDCG@10
      neighborhood: [ 10, 50, 100 ]
      alpha: [ 0.8, 1, 1.5 ]
      beta: [ 0.3, 0.6, 0.9 ]
      normalize_similarity: True
#    MultiVAE:
#      meta:
#        validation_rate: 1
#        verbose: True
#        save_recs: True
#        validation_metric: nDCG@10
#        optimize_internal_loss: False
#      lr: [0.01, 0.001] #0.002718457840118028
#      epochs: 100
#      intermediate_dim: [100, 200] #91
#      latent_dim: [50, 100, 200] #100
#      batch_size: -1
#      dropout_pkeep: [0.8, 1]
#      reg_lambda: 0 #[0, 0.01]
      early_stopping:
        patience: 10
        verbose: True
        monitor: nDCG@10

#        rel_val: 0.1
